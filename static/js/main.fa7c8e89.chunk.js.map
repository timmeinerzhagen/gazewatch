{"version":3,"sources":["visualizations/StarVisual.js","App.js","reportWebVitals.ts","index.tsx"],"names":["color","d3","domain","range","interpolate","width","height","sum","node","s","value","undefined","children","c","StarVisual","props","myRef","React","createRef","loading","this","console","log","current","selectAll","remove","getChart","data","Box","align","justify","direction","fill","Spinner","ref","style","display","view","root","size","padding","d","sort","a","b","pack","focus","svg","append","attr","on","event","zoom","descendants","slice","join","depth","stopPropagation","label","parent","text","name","zoomTo","v","k","x","y","r","transition","duration","altKey","tween","i","t","filter","Component","App","state","rawdata","data_visualization","octokit","Octokit","stargazer_range","username","loadData","Grommet","Header","gap","Heading","TextInput","onChange","setState","target","Button","primary","onClick","Footer","level","href","paginate","rest","activity","listReposStarredByUser","per_page","then","generateByOrg","catch","err","error","orgs","forEach","repo","owner","login","push","createVisualizationData","json","Object","keys","key","entry","stargazers_count","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa7c8e89.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Spinner } from 'grommet';\nimport * as d3 from 'd3';\n\nconst color = d3.scaleLinear()\n    .domain([0, 5])\n    .range([\"hsl(152,80%,80%)\", \"hsl(228,30%,40%)\"])\n    .interpolate(d3.interpolateHcl);\nconst width = 1000, height = 1000\nconst pack = data => d3.pack()\n    .size([width, height])\n    .padding(3)\n  (d3.hierarchy(data)\n    .sum(d => d.value)\n    .sort((a, b) => b.value - a.value))\n\nclass StarVisual extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.myRef = React.createRef(); \n  }\n\n  render(){\n    const { loading } = this.props;\n    console.log(loading);\n\n    d3.select(this.myRef.current).selectAll(\"*\").remove();\n    this.getChart(this.props.data);\n    return(\n      <Box align=\"center\" justify=\"center\" direction=\"column\" fill>\n        { loading && <Spinner justify=\"center\" /> }\n        <Box ref={this.myRef} fill={!loading} style={{display: loading ? \"none\" : \"block\"}}/>\n      </Box>\n    );\n  }\n\n  getChart(data) {\n    const STARGAZER_MIN = 10000;\n\n    const root = pack(data);\n    let focus = root;\n    let view;\n  \n    /* Base */\n    const svg = d3.select(this.myRef.current).append(\"svg\")\n      .attr(\"viewBox\", `-${width / 2} -${height / 2} ${width} ${height}`) //-${width / 2} -${height / 2} ${width} ${height}\n      .style(\"height\", \"100%\")\n      .style(\"width\", \"100%\")\n      .style(\"display\", \"block\")\n      .style(\"margin\", \"0 -14px\")\n      .style(\"background\", color(0))\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", (event) => zoom(event, root));\n  \n    /* Circles */\n    const node = svg.append(\"g\")\n      .selectAll(\"circle\")\n      .data(root.descendants().slice(1))\n      .join(\"circle\")\n        .attr(\"fill\", d => d.children ? color(d.depth) : \"white\")\n        .attr(\"pointer-events\", d => !d.children ? \"none\" : null)\n        .on(\"mouseover\", function() { d3.select(this).attr(\"stroke\", \"#000\"); })\n        .on(\"mouseout\", function() { d3.select(this).attr(\"stroke\", null); })\n        .on(\"click\", (event, d) => focus !== d && (zoom(event, d), event.stopPropagation()));\n  \n    /* Text labels */\n    const label = svg.append(\"g\")\n        .style(\"font\", \"30px sans-serif\")\n        .attr(\"pointer-events\", \"none\")\n        .attr(\"text-anchor\", \"middle\")\n      .selectAll(\"text\")\n      .data(root.descendants())\n      .join(\"text\")\n        .style(\"fill-opacity\", d => d.parent === root ? 1 : 0)\n        .style(\"display\", d => sum(d) > STARGAZER_MIN ? \"inline\" : \"none\")\n        .text(d => d.data.name);\n  \n    zoomTo([root.x, root.y, root.r * 2]);\n  \n    function zoomTo(v) {\n      const k = width / v[2];\n  \n      view = v;\n  \n      label.attr(\"transform\", d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`);\n      node.attr(\"transform\", d => `translate(${(d.x - v[0]) * k},${(d.y - v[1]) * k})`);\n      node.attr(\"r\", d => d.r * k);\n    }\n  \n    function zoom(event, d) {  \n      focus = d;\n  \n      const transition = svg.transition()\n          .duration(event.altKey ? 7500 : 750)\n          .tween(\"zoom\", d => {\n            const i = d3.interpolateZoom(view, [focus.x, focus.y, focus.r * 2]);\n            return t => zoomTo(i(t));\n          });\n  \n      label\n        .filter(function(d) { return (d.parent === focus || this.style.display === \"inline\") })\n        .transition(transition)\n          .style(\"fill-opacity\", d => d.parent === focus ? 1 : 0)\n          .on(\"start\", function(d) { if (d.parent === focus && sum(d) > STARGAZER_MIN) this.style.display = \"inline\"; })\n          .on(\"end\", function(d) { if (d.parent !== focus) this.style.display = \"none\"; });\n    }\n  \n    return svg.node();\n  }\n};\n\nfunction sum(node) {\n  let s = 0;\n  if('value' in node) s += node.value;\n  if(node === undefined || node.children === undefined) return s;\n  for(let c in node.children) {\n    const child = node.children[c];\n    s += child.value;\n  }\n  return s;\n}\n\n\nexport default StarVisual;\n","import React from 'react';\nimport { Grommet, Heading, Header, Footer, Box, TextInput, Button } from 'grommet';\nimport './App.css';\n\nimport { Octokit } from \"@octokit/rest\"\nimport StarVisual from './visualizations/StarVisual';\n\nclass App extends React.Component {\n\n  state = {\n    rawdata: [],\n    data_visualization: {\n      name: \"timmeinerzhagen\",\n      children: [{\"name\": \"BetweennessCentrality\", \"value\": 20},],\n    },\n    octokit: new Octokit({\n      // previews: [\"mercy-preview\"],\n    }),\n    stargazer_range: 10000,\n    username: \"timmeinerzhagen\",\n    loading: true,\n  }\n\n  async componentDidMount() {\n    this.loadData(\"timmeinerzhagen\")\n  }\n\n  render() {\n    \n    const { data_visualization, stargazer_range, username, loading} = this.state;\n\n    return (\n      <Grommet style={{height: \"100vh\", width: \"100vw\"}}>\n        <Box fill={true} align=\"center\">\n          <Header align=\"center\" direction=\"row\" justify=\"between\" gap=\"medium\">\n            <Heading> Repositories with stargazers by user grouped by org </Heading>\n          </Header>\n          <Box align=\"center\" gap=\"small\" fill={true}>\n            <Box direction=\"row\" gap=\"medium\">\n              <TextInput \n                value={username}\n                onChange={event => this.setState({username: event.target.value})}/>\n              <Button primary label=\"Visualize\" onClick={() => {this.setState({loading: true}); this.loadData()}}/>\n            </Box>\n            <StarVisual fill={true} data={data_visualization} range={stargazer_range} loading={loading}/>\n          </Box>\n          <Footer align=\"center\" direction=\"row\" justify=\"between\" gap=\"medium\">\n            <Heading level={2}> View the project on <a href=\"https://github.com/timmeinerzhagen/gazewatch\">GitHub</a> </Heading>\n          </Footer>\n        </Box>\n      </Grommet>\n    );\n  }\n\n  loadData() {    \n    const { octokit, username } = this.state;\n\n    octokit\n      .paginate(octokit.rest.activity.listReposStarredByUser, {\n        username: username,\n        per_page: 100,\n      })\n      .then(data => { \n        this.setState({ rawdata: data }); \n        this.generateByOrg(data);\n      })\n      .catch(err => { \n        console.error(err);\n      });\n  }\n\n  generateByOrg(data) {\n\n    let orgs = {};\n\n    data.forEach(repo => {\n      if(repo.owner.login in orgs)\n        orgs[repo.owner.login].push(repo);\n      else\n        orgs[repo.owner.login] = [repo];\n    });\n    this.setState({ data: orgs }); \n    this.createVisualizationData(orgs);\n  }\n\n  createVisualizationData(data) {\n    let json = {\n      name: \"timmeinerzhagen\",\n      children: [],\n    };\n\n    Object.keys(data).forEach(function(key) {\n        let entry = data[key];\n        let children = [];\n\n        entry.forEach(function(repo) {\n          children.push({\n            name: repo.name,\n            value: repo.stargazers_count,\n          });\n        });\n\n        json.children.push({\n          name: key,\n          children: children,\n        });\n    });\n\n    this.setState({ \n      data_visualization: json,\n      loading: false,\n    }); \n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}